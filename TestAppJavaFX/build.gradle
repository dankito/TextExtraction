apply plugin: 'kotlin'
apply plugin: 'application'


mainClassName = "net.dankito.text.extraction.app.javafx.TestApplicationJavaFX"

def title = 'Test Extractor Demo'


sourceCompatibility = 1.8

compileKotlin.kotlinOptions.jvmTarget = "1.8"

compileTestKotlin.kotlinOptions.jvmTarget = "1.8"


dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:$kotlinCoroutinesVersion"

    implementation project(':PopplerPdfTextExtractor')
    // do not include OpenPdfPdfTextExtractor and iText2PdfTextExtractor at the same time as both
    // have the same package and class names but different method and class signatures
//    implementation project(':OpenPdfPdfTextExtractor')
    implementation project(':iText2PdfTextExtractor')
    implementation project(':iTextPdfTextExtractor')
    implementation project(':PdfBoxPdfTextExtractor')
    implementation project(':TikaTextExtractor')
    implementation project(':Tesseract4CommandlineImageTextExtractor')
    implementation project(':Tesseract4JniImageTextExtractor')
    implementation project(':FineReaderHotFolderImageTextExtractor')
    implementation project(':FineReaderCommandlineImageTextExtractor')

    implementation "net.dankito.utils:java-fx-utils:$javaFxUtilsVersion"

    implementation "ch.qos.logback:logback-classic:$logbackVersion"

}


jar {
    // thanks so much to Andreas Volkmann and Robert for explaining this issue to me: https://stackoverflow.com/questions/51455197/gradle-fatjar-could-not-find-or-load-main-class
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    manifest {
        attributes  'Main-Class': mainClassName,
                'Implementation-Title': title,
                'Implementation-Version': rootProject.version
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

    dependsOn = [ ":jarAll" ]
}