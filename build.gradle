
buildscript {
    
    apply from: 'versions.gradle'


    repositories {
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


plugins {
    // So after executing publish staged repository can be closed and released by executing closeAndReleaseRepository
    id("io.codearte.nexus-staging") version "0.21.2"
}


allprojects {
    group = "net.dankito.text.extraction"
    version = "0.6.2-SNAPSHOT"

    ext["sourceCodeRepositoryBaseUrl"] = "github.com/dankito/TextExtraction"

    ext["projectDescription"] = "A framework for extracting text from different types of files, e.g. PDFs, images, office documents, text files, ..."


    repositories {
        mavenCentral()
        mavenLocal()
        google()
        // for security issues fixed version of iText 2 from JasperReports
        maven {
            url "https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts"
        }
    }
}


task jarAll {
    dependsOn = [ "TextExtractorCommon:jar",
                  "iTextPdfTextExtractor:jar", "iText2PdfTextExtractor:jar", "OpenPdfPdfTextExtractor:jar",
                  "PdfBoxPdfTextExtractor:jar", "PopplerPdfTextExtractor:jar",
                  "TesseractCommon:jar", "Tesseract4CommandlineImageTextExtractor:jar", "Tesseract4JniImageTextExtractor:jar",
                  "FineReaderHotFolderImageTextExtractor:jar", "FineReaderCommandlineImageTextExtractor:jar",
                  "TikaTextExtractor:jar"
    ]
}

task publishAllToMavenLocal {
    dependsOn = [ "TextExtractorCommon:publishToMavenLocal",
                  "iTextPdfTextExtractor:publishToMavenLocal", "iText2PdfTextExtractor:publishToMavenLocal",
                  "OpenPdfPdfTextExtractor:publishToMavenLocal",
                  "PdfBoxPdfTextExtractor:publishToMavenLocal", "PdfBox2PdfTextExtractor:publishToMavenLocal",
                  "PdfBoxAndroidPdfTextExtractor:publishToMavenLocal",
                  "PopplerPdfTextExtractor:publishToMavenLocal",
                  "TesseractCommon:publishToMavenLocal", "Tesseract4CommandlineImageTextExtractor:publishToMavenLocal",
                  "Tesseract4JniImageTextExtractor:publishToMavenLocal",
                  "FineReaderHotFolderImageTextExtractor:publishToMavenLocal", "FineReaderCommandlineImageTextExtractor:publishToMavenLocal",
                  "TikaTextExtractor:publishToMavenLocal"
    ]
}

task publishAll {
    dependsOn = [ "TextExtractorCommon:publish",
                  "iTextPdfTextExtractor:publish", "iText2PdfTextExtractor:publish",
                  "OpenPdfPdfTextExtractor:publish",
                  "PdfBoxPdfTextExtractor:publish", "PdfBox2PdfTextExtractor:publish",
                  "PdfBoxAndroidPdfTextExtractor:publish",
                  "PopplerPdfTextExtractor:publish",
                  "TesseractCommon:publish", "Tesseract4CommandlineImageTextExtractor:publish",
                  "Tesseract4JniImageTextExtractor:publish",
                  "FineReaderHotFolderImageTextExtractor:publish", "FineReaderCommandlineImageTextExtractor:publish",
                  "TikaTextExtractor:publish"
    ]
}